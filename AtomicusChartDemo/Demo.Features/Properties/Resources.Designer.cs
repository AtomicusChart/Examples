//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AtomicusChart.Demo.Features.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AtomicusChart.Demo.Features.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Custom series data reader&quot;, GroupName = &quot;Series&quot;, Description = &quot;This example shows how to create custom series data reader and implement efficient dynamic update logic. &quot; +
        ///																					 &quot;You can [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AnimatedSeriesDemo {
            get {
                return ResourceManager.GetString("AnimatedSeriesDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.ValueData.DataReaders;
        ///using AtomicusChart.ValueData.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.ValueData
        ///{
        ///	[Feature(Name = &quot;Custom series with value&quot;, GroupName = &quot;Series&quot;, Description = &quot;Demo shows example of using series with valu [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AnimatedValueSeriesDemo {
            get {
                return ResourceManager.GetString("AnimatedValueSeriesDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Arrow&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using arrow primitive.&quot;)]
        ///	class ArrowDemo : FeatureDemo
        ///	{
        ///		public override void Do(IDemoChartControl chartControl)
        ///		{
        ///			chartControl.Axes.IsAxes3DVisible = true;
        ///			chartControl.DataSource = new[]
        ///			{
        ///				new Ar [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ArrowDemo {
            get {
                return ResourceManager.GetString("ArrowDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Aspect Ratio 3D&quot;, GroupName = &quot;Custom Features&quot;, Description = &quot;Demo shows example of usage 3D aspect ratio feature that may be used for data scaling to fit it according to specific rules.&quot;)]
        ///	class Aspec [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AspectRatio3DDemo {
            get {
                return ResourceManager.GetString("AspectRatio3DDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Atomicus {
            get {
                object obj = ResourceManager.GetObject("Atomicus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.GeometryFactory;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.Collections;
        ///using AtomicusChart.Interface.UtilityTypes;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Bars 3D Colored&quot;, GroupName = &quot;Primitives sets&quot;, Description = &quot;Demo shows example of primitive collection usage for memory efficient and  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Bars3DColoredDemo {
            get {
                return ResourceManager.GetString("Bars3DColoredDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.GeometryFactory;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.Collections;
        ///using AtomicusChart.Interface.UtilityTypes;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Bars 3D&quot;, GroupName = &quot;Primitives sets&quot;, Description = &quot;Demo shows example of primitive collection usage for memory efficient and high-per [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Bars3DDemo {
            get {
                return ResourceManager.GetString("Bars3DDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Benzene&quot;, GroupName = &quot;Primitives sets&quot;, Description = &quot;Demo shows example of combination different primitives into one set.&quot;)]
        ///	class Benzene : FeatureDemo
        ///	{
        ///		pu [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Benzene {
            get {
                return ResourceManager.GetString("Benzene", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap bump01 {
            get {
                object obj = ResourceManager.GetObject("bump01", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Windows.Media.Imaging;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Geometry;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.UtilityTypes;
        ///using AtomicusChart.WpfControl;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Bump image mapping&quot;, GroupName = &quot;Raster Data&quot;, Description = &quot;Demo shows exa [rest of string was truncated]&quot;;.
        /// </summary>
        public static string BumpRasterDataDemo {
            get {
                return ResourceManager.GetString("BumpRasterDataDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.AxesData;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Cartesian&quot;, GroupName = &quot;Coordinate Systems&quot;, Description = &quot;Demo shows example of presenting render data in cartesian coordinate system.&quot;)]
        ///	class CartesianCSDemo : FeatureDemo
        ///	{
        ///		private static readon [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CartesianCSDemo {
            get {
                return ResourceManager.GetString("CartesianCSDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///using AtomicusChart.Interface.Processing;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Custom multicolor surface&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using custom multicolor primitive.&quot;)]
        ///	public class ColoredDemo : FeatureDemo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ColoredDemo {
            get {
                return ResourceManager.GetString("ColoredDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Processing;
        ///using AtomicusChart.Volumes.Data;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name = &quot;Complex volume geometry&quot;, GroupName = &quot;Custom geometies&quot;, Description = &quot;De [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ComplexGeometryDemo {
            get {
                return ResourceManager.GetString("ComplexGeometryDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Cone&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using cone primitive.&quot;)]
        ///	class ConeDemo : FeatureDemo
        ///	{
        ///		public override void Do(IDemoChartControl chartControl)
        ///		{
        ///			chartControl.Axes.IsAxes3DVisible = true;
        ///			chartControl.DataSource = new Cone[]
        ///			{
        ///				new  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ConeDemo {
            get {
                return ResourceManager.GetString("ConeDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Cube&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using cube primitive.&quot;)]
        ///	class CubeDemo : FeatureDemo
        ///	{
        ///		public override void Do(IDemoChartControl chartControl)
        ///		{
        ///			chartControl.Axes.IsAxes3DVisible = true;
        ///			chartControl.DataSource = new []
        ///			 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CubeDemo {
            get {
                return ResourceManager.GetString("CubeDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///using System;
        ///using System.ComponentModel;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.Processing.Snapping;
        ///using AtomicusChart.Interface.Processing.Snapping.Contexts;
        ///
        ///namespace AtomicusChart [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CustomTargetSnappingDemo {
            get {
                return ResourceManager.GetString("CustomTargetSnappingDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.AxesData;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Cylindrical&quot;, GroupName = &quot;Coordinate Systems&quot;, Description = &quot;Demo shows example of presenting render data in cylindrical coordinates system.&quot;)]
        ///	class CylindricalCSDemo : FeatureDemo
        ///	{
        ///		private static [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CylindricalCSDemo {
            get {
                return ResourceManager.GetString("CylindricalCSDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.Interaction.RenderDataInteraction;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Item interaction&quot;, GroupName = &quot;Interaction&quot;) [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DataInteraction {
            get {
                return ResourceManager.GetString("DataInteraction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Disk&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using disk primitive.&quot;)]
        ///	class DiskDemo : FeatureDemo
        ///	{
        ///		public override void Do(IDemoChartControl chartControl)
        ///		{
        ///			chartControl.Axes.IsAxes3DVisible = true;
        ///			chartControl.DataSource = new Disk[]
        ///			{
        ///				new  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DiskDemo {
            get {
                return ResourceManager.GetString("DiskDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.ValueData.DataReaders;
        ///using AtomicusChart.ValueData.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.ValueData
        ///{
        ///	[Feature(Name = &quot;Value surface dynamic updates&quot;, GroupName = &quot;Surfaces&quot;,
        ///		Description =
        ///			&quot;Demo shows example of dynamic value surface data update. Default implementation of data reader is used for dynamic updates, [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DynamicStructuredValueSufraceDemo {
            get {
                return ResourceManager.GetString("DynamicStructuredValueSufraceDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.ValueData.DataReaders;
        ///using AtomicusChart.ValueData.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.ValueData
        ///{
        ///	[Feature(Name = &quot;Dynamic points with value&quot;, GroupName = &quot;Points&quot;, Description = &quot;Demo shows example of using points with value and its default implementation of dynamic data reader.&quot;)]
        ///	class DynamicValuePointsDemo  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DynamicValuePointsDemo {
            get {
                return ResourceManager.GetString("DynamicValuePointsDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.Geometry;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.ValueData.DataReaders;
        ///using AtomicusChart.ValueData.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.ValueData
        ///{
        ///	[Feature(Name = &quot;Raster d [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DynamicValueRasterDataDemo {
            get {
                return ResourceManager.GetString("DynamicValueRasterDataDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.ObjectModel;
        ///using System.ComponentModel;
        ///using System.Linq;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.ValueData.DataReaders;
        ///using AtomicusChart.ValueData.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.ValueData
        ///{
        ///	[Feature(Name = &quot;Contours performance&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DynamicValueSurfaceContoursDemo {
            get {
                return ResourceManager.GetString("DynamicValueSurfaceContoursDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Default error bars&quot;, GroupName = &quot;Error Bars&quot;, Description = &quot;Demo shows example of using error bars with Bars type.&quot;)]
        ///	public class ErrorBarDemo : FeatureDemo
        ///	{
        ///		private const int PointCount = 110;
        ///
        ///		public override void Do(IDemoChartContr [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ErrorBarDemo {
            get {
                return ResourceManager.GetString("ErrorBarDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.Interaction.RenderDataInteraction;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Highlighting&quot;, GroupName = &quot;Interaction&quot;)]
        ///	class Highlighting : FeatureDemo
        ///	{
        ///		public override void Do(IDemoChart [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Highlighting {
            get {
                return ResourceManager.GetString("Highlighting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.GeometryFactory;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;InSb&quot;, GroupName = &quot;Primitives sets&quot;, Description = &quot;Demo shows example of combination different primitives into one se [rest of string was truncated]&quot;;.
        /// </summary>
        public static string InSb {
            get {
                return ResourceManager.GetString("InSb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.ValueData.DataReaders;
        ///using AtomicusChart.ValueData.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.ValueData
        ///{
        ///	[Feature(Name = &quot;Irregular surface&quot;, GroupName = &quot;Surfaces&quot;, Description = &quot;Demo shows example of using irregular in 2D space surface primitive. &quot; +
        ///	                                                [rest of string was truncated]&quot;;.
        /// </summary>
        public static string IrregularValueSurface {
            get {
                return ResourceManager.GetString("IrregularValueSurface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.Interaction.RenderDataInteraction;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Labels&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using label prim [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LabelDemo {
            get {
                return ResourceManager.GetString("LabelDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Lines&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using line primitive.&quot;)]
        ///	class LineDemo : FeatureDemo
        ///	{
        ///		public override void Do(IDemoChartControl chartControl)
        ///		{
        ///			const int pointsCount = 10_000;
        ///			const float amplitude = 0.6f;
        ///
        ///
        ///			chartControl.Contex [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LineDemo {
            get {
                return ResourceManager.GetString("LineDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.ComponentModel;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.Proc [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LineSnappingDemo {
            get {
                return ResourceManager.GetString("LineSnappingDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Links &amp; Tube &amp; Cyllinder&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using different link and tube primitives.&quot;)]
        ///	class LinkDemo : FeatureDemo
        ///	{
        ///		public override void Do(IDemoChartControl chartControl)
        ///		{
        ///		 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LinkDemo {
            get {
                return ResourceManager.GetString("LinkDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Windows.Media.Imaging;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///using AtomicusChart.Interface.Processing;
        ///using AtomicusChart.Interface.UtilityTypes;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Lit sphere&quot;, GroupName = &quot;Custom Features&quot;, Description =
        ///			&quot;Demo shows example of usage lit sphere bitma [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LitSphereDemo {
            get {
                return ResourceManager.GetString("LitSphereDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.Interaction.RenderDataInteraction;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Pixel-depen [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MarkerDemo {
            get {
                return ResourceManager.GetString("MarkerDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Multiple custom series data reader&quot;, GroupName = &quot;Series&quot;, Description = &quot;This example shows how to create cust [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MultipleAnimatedSeriesDemo {
            get {
                return ResourceManager.GetString("MultipleAnimatedSeriesDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.GeometryFactory;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Nanotube&quot;, GroupName = &quot;Primitives sets&quot;, Description = &quot;Demo shows example of combination different primitives into on [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Nanotube {
            get {
                return ResourceManager.GetString("Nanotube", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Order-independent transparency&quot;, GroupName = &quot;Custom Features&quot;, Description = &quot;Demo shows example of usage of order-independent transparency technique which allows &quot; +
        ///	                                                                    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string OitDemo {
            get {
                return ResourceManager.GetString("OitDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Geometry;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.ValueData.DataReaders;
        ///using AtomicusChart.ValueData.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.ValueData
        ///{
        ///	[Feature(Name = &quot;Pixelated raster data&quot;, GroupName = &quot;Raster&quot;, Description = &quot;Demo shows example of using raster data with value. &quot; +
        ///	      [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PixelatedValueRasterDemo {
            get {
                return ResourceManager.GetString("PixelatedValueRasterDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Points&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using points.&quot;)]
        ///	class PointsDemo : FeatureDemo
        ///	{
        ///		private static readonly Random Random = new Random(DateTime.Now.Millisecond);
        ///		private const int PointsCount = 100000 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PointsDemo {
            get {
                return ResourceManager.GetString("PointsDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.ComponentModel;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.Processing.Snapping;
        ///using AtomicusChart.Interface.Processing.Snapping.Contexts;
        ///using AtomicusChart.Interfa [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PointsSnappingDemo {
            get {
                return ResourceManager.GetString("PointsSnappingDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Prism&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using prism primitive.&quot;)]
        ///	class PrismDemo : FeatureDemo
        ///	{
        ///		public override void Do(IDemoChartControl chartControl)
        ///		{
        ///			chartControl.Axes.IsAxes3DVisible = true;
        ///			chartControl.DataSource = new Pris [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PrismDemo {
            get {
                return ResourceManager.GetString("PrismDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Windows.Media.Imaging;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Geometry;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.WpfControl;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Static logo image&quot;, GroupName = &quot;Raster Data&quot;, Description = &quot;Demo shows example of most common raster data usage.&quot;)]
        ///	class RasterDataDe [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RasterDataDemo {
            get {
                return ResourceManager.GetString("RasterDataDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///using AtomicusChart.Volumes.Data;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name =  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RectVolumeSectionDemo {
            get {
                return ResourceManager.GetString("RectVolumeSectionDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.AxesData;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Static series&quot;, GroupName = &quot;Series&quot;, Description = &quot;This example shows how to create series render data  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SeriesDemo {
            get {
                return ResourceManager.GetString("SeriesDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] skull {
            get {
                object obj = ResourceManager.GetObject("skull", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Spheres&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using sphere primitive.&quot;)]
        ///	public class SphereDemo : FeatureDemo
        ///    {
        ///	    public override void Do(IDemoChartControl chartControl)
        ///	    {
        ///			c [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SphereDemo {
            get {
                return ResourceManager.GetString("SphereDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.AxesData;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.DataReaders;
        ///using AtomicusChart.Interface.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Spherical&quot;, GroupName = &quot;Coordinate Systems&quot;, Description = &quot;Demo shows example of presenting render data in spherical coordinate system.&quot;)]
        ///	class SphericalCSDemo : FeatureDemo
        ///	{
        ///		private static readon [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SphericalCSDemo {
            get {
                return ResourceManager.GetString("SphericalCSDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Geometry;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.ValueData.DataReaders;
        ///using AtomicusChart.ValueData.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.ValueData
        ///{
        ///	[Feature(Name = &quot;Raster data&quot;, GroupName = &quot;Raster&quot;, Description = &quot;Demo shows example of using raster data with value. &quot; +
        ///	                  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string StaticValueRasterDataDemo {
            get {
                return ResourceManager.GetString("StaticValueRasterDataDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap stone01 {
            get {
                object obj = ResourceManager.GetObject("stone01", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Stripe error bars&quot;, GroupName = &quot;Error Bars&quot;, Description = &quot;Demo shows example of using error bars with Stripe type.&quot;)]
        ///	public class StripeErrorBarDemo : FeatureDemo
        ///	{
        ///		private const int PointCount = 5000;
        ///
        ///		public override void Do(IDemoCh [rest of string was truncated]&quot;;.
        /// </summary>
        public static string StripeErrorBarDemo {
            get {
                return ResourceManager.GetString("StripeErrorBarDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.ValueData.DataReaders;
        ///using AtomicusChart.ValueData.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.ValueData
        ///{
        ///	[Feature(Name = &quot;Structured grid surface&quot;, GroupName = &quot;Surfaces&quot;, Description = &quot;Demo shows example of using structured grid surface primitive. &quot;)]
        ///	class StructuredValueSurface : FeatureDemo
        ///	{
        ///		private const int MapSize = 200;
        ///
        ///		public override void Do(IDemoChartCon [rest of string was truncated]&quot;;.
        /// </summary>
        public static string StructuredValueSurface {
            get {
                return ResourceManager.GetString("StructuredValueSurface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///using AtomicusChart.Interface.Processing;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Custom surface&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using custom primitive.&quot;)]
        ///	class SurfaceDemo : FeatureDemo
        ///	{
        ///		private const int SurfaceResolution = 200 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SurfaceDemo {
            get {
                return ResourceManager.GetString("SurfaceDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Tetrahedron &amp; Pyramid&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using tetrahedron and pyramid primitive.&quot;)]
        ///	class TetrahedronDemo : FeatureDemo
        ///	{
        ///		public override void Do(IDemoChartControl chartControl)
        ///		{        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string TetrahedronDemo {
            get {
                return ResourceManager.GetString("TetrahedronDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///
        ///namespace AtomicusChart.Demo.Features.Basic
        ///{
        ///	[Feature(Name = &quot;Torus&quot;, GroupName = &quot;Primitives&quot;, Description = &quot;Demo shows example of using torus primitive.&quot;)]
        ///	class TorusDemo : FeatureDemo
        ///	{
        ///		public override void Do(IDemoChartControl chartControl)
        ///		{
        ///			chartControl.Axes.IsAxes3DVisible = true;
        ///			chartControl.DataSource = new[]
        ///			{
        ///				new To [rest of string was truncated]&quot;;.
        /// </summary>
        public static string TorusDemo {
            get {
                return ResourceManager.GetString("TorusDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.ValueData.DataReaders;
        ///using AtomicusChart.ValueData.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.ValueData
        ///{
        ///	[Feature(Name = &quot;Points with value&quot;, GroupName = &quot;Points&quot;, Description = &quot;Demo shows example of using points with value.&quot;)]
        ///	class ValuePointsDemo : FeatureDemo
        ///	{
        ///		private const int PointsCount = 100000;
        ///		private const float MaxRadius = 5;
        ///		private sta [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ValuePointsDemo {
            get {
                return ResourceManager.GetString("ValuePointsDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.ValueData.DataReaders;
        ///using AtomicusChart.ValueData.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.ValueData
        ///{
        ///	[Feature(Name = &quot;Series with value&quot;, GroupName = &quot;Series&quot;, Description = &quot;Demo shows example of using series with value.&quot;)]
        ///	public class ValueSeriesDemo : FeatureDemo        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ValueSeriesDemo {
            get {
                return ResourceManager.GetString("ValueSeriesDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.ObjectModel;
        ///using System.ComponentModel;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.Interaction.RenderDataInteraction;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.ValueData.DataReaders;
        ///usi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ValueSurfaceContourPickingDemo {
            get {
                return ResourceManager.GetString("ValueSurfaceContourPickingDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.ObjectModel;
        ///using System.ComponentModel;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface;
        ///using AtomicusChart.Interface.CameraView;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.ValueData.DataReaders;
        ///using AtomicusChart.ValueData.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.ValueData
        ///{
        ///	[Feature(Name = &quot;Contour [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ValueSurfaceContoursDemo {
            get {
                return ResourceManager.GetString("ValueSurfaceContoursDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name = &quot;Average Intensity&quot;, GroupName = &quot;Intensity projections&quot;, Description = &quot;Demo shows average intensity projection via raycasting rendering technique. Maxim [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeIPRayCastingDemoAverage {
            get {
                return ResourceManager.GetString("VolumeIPRayCastingDemoAverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name = &quot;Max Intensity&quot;, GroupName = &quot;Intensity projections&quot;, Description = &quot;Demo shows maximal intensity projection via raycasting rendering technique. Maximal,  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeIPRayCastingDemoMax {
            get {
                return ResourceManager.GetString("VolumeIPRayCastingDemoMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name = &quot;Min Intensity&quot;, GroupName = &quot;Intensity projections&quot;, Description = &quot;Demo shows minimal intensity projection via raycasting rendering technique. Maximal,  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeIPRayCastingDemoMin {
            get {
                return ResourceManager.GetString("VolumeIPRayCastingDemoMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name = &quot;Iso-surface animated&quot;, GroupName = [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeIsoRayCastingAnimatedDemo {
            get {
                return ResourceManager.GetString("VolumeIsoRayCastingAnimatedDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.Interaction.RenderDataInteraction;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using Atomic [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeIsoRayCastingDemo {
            get {
                return ResourceManager.GetString("VolumeIsoRayCastingDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.Interaction.RenderDataInteraction;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using Atomic [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeIsoRayCastingDemo1 {
            get {
                return ResourceManager.GetString("VolumeIsoRayCastingDemo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.Interaction.RenderDataInteraction;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using Atomic [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeIsoRayCastingDepthDemo {
            get {
                return ResourceManager.GetString("VolumeIsoRayCastingDepthDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name = &quot;Iso-surface transparency (OIT)&quot;, G [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeIsoRayCastingOitDemo {
            get {
                return ResourceManager.GetString("VolumeIsoRayCastingOitDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name = &quot;Iso-surface transparency&quot;, GroupNa [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeIsoRayCastingTransparentDemo {
            get {
                return ResourceManager.GetString("VolumeIsoRayCastingTransparentDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.Interaction.RenderDataInteraction;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name = &quot;Ray casting [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeRayCastingDemo {
            get {
                return ResourceManager.GetString("VolumeRayCastingDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name = &quot;Ray casting with depth&quot;, GroupName [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeRayCastingDepthDemo {
            get {
                return ResourceManager.GetString("VolumeRayCastingDepthDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.Interaction;
        ///using AtomicusChart.Interface.Interaction.RenderDataInteraction;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name = &quot;Ray casting [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeRayCastingHighlightingDemo {
            get {
                return ResourceManager.GetString("VolumeRayCastingHighlightingDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.PresentationData.Primitives;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///using AtomicusChart.Volumes.PresentationData.Widgets;
        ///
        ///namespace Atomi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeSectionCompositeDemo {
            get {
                return ResourceManager.GetString("VolumeSectionCompositeDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Interface.PresentationData.BaseTypes;
        ///using AtomicusChart.Interface.Processing;
        ///using AtomicusChart.Volumes.Data;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name = &quot;Spherical section&quot;, GroupName = &quot;Sections&quot;, Descrip [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeSectionDemo {
            get {
                return ResourceManager.GetString("VolumeSectionDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using AtomicusChart.Core.DirectX;
        ///using AtomicusChart.Demo.Features.Infrastructure;
        ///using AtomicusChart.Interface.Data;
        ///using AtomicusChart.Volumes.DataReaders;
        ///using AtomicusChart.Volumes.Geometry;
        ///using AtomicusChart.Volumes.PresentationData;
        ///
        ///namespace AtomicusChart.Demo.Features.VolumeData
        ///{
        ///	[Feature(Name = &quot;Ray casting with shading&quot;, GroupName = &quot;Ray casting&quot;, Description = &quot;Demo shows raycasting rendering technique. You can customize transfer function for r [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VolumeShadedRayCastingDemo {
            get {
                return ResourceManager.GetString("VolumeShadedRayCastingDemo", resourceCulture);
            }
        }
    }
}
